{"version":3,"sources":["assets/img.png","assets/avatar.png","assets/projectsAvatar.png","assets/quoteScreen.png","assets/eCommerce.png","Home.js","Header.js","About.js","Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","src","img","alt","Header","to","exact","activeClassName","About","avatar","href","target","rel","aria-label","Projects","projectAvatar","quotePic","commercePic","App","basename","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b3ca24a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img.251341c1.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar.2b13c159.png\";","module.exports = __webpack_public_path__ + \"static/media/projectsAvatar.4f86ca59.png\";","module.exports = __webpack_public_path__ + \"static/media/quoteScreen.d25df36f.png\";","module.exports = __webpack_public_path__ + \"static/media/eCommerce.ecd3317f.png\";","import React from 'react'\r\nimport img from './assets/img.png'\r\nimport './assets/Home.scss'\r\n\r\nexport const Home = () => (\r\n  <div className=\"home\">\r\n    <h1 className=\"home_hi\">Hi!</h1>\r\n    <h1 className=\"home_name\">I'm Iuliia, a Frontend Developer </h1>\r\n    <h5>...and a JavaScript Padawan</h5>\r\n    <img src={img} alt=\"super girl\" className=\"image-container_img\" />\r\n  </div>\r\n)","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './assets/Header.scss'\r\n\r\nexport const Header = () => (\r\n  <div className=\"header\">\r\n     <NavLink to=\"/\" className=\"header_link\" exact activeClassName=\"header_link__active\">Home</NavLink>\r\n     <NavLink to=\"/about\" className=\"header_link\" exact activeClassName=\"header_link__active\">About</NavLink>\r\n     <NavLink to=\"/projects\" className=\"header_link\" exact activeClassName=\"header_link__active\">Projects</NavLink>\r\n  </div> \r\n)","import React from 'react'\r\nimport './assets/About.scss'\r\nimport avatar from './assets/avatar.png'\r\n\r\nexport const About = () => (\r\n  <div className=\"about\">\r\n    <div className=\"about_info\">\r\n      <img alt=\"super girl avatar\" src={avatar} className=\"about_info__img\" />\r\n      <div className=\"about_info__text\">\r\n        <p>Hey and let's be friends! I'm a self taught developer with a great passion for building things with modern Frontend tools.</p>\r\n        <p>So far I have had experience with freelance work, opensource activity, and a current frontend position at a startup. I'm always eager to rise to new challenges and explore new horizons</p> \r\n      </div>\r\n    </div>\r\n    <div className=\"about_stack\">\r\n      <div className=\"about_stack__title\">My tech stack</div>\r\n      <div className=\"about_stack__grid\">\r\n        <div className=\"about_stack__icon\"><i className=\"fa fa-hashtag\"></i>{' '}JavaScript</div>\r\n        <div className=\"about_stack__icon\"><i className=\"fa fa-hashtag\"></i>{' '}React</div>\r\n        <div className=\"about_stack__icon\"><i className=\"fa fa-hashtag\"></i>{' '}HTML</div>\r\n        <div className=\"about_stack__icon\"><i className=\"fa fa-hashtag\"></i>{' '}SCC</div>\r\n      </div>\r\n    </div>\r\n    <div className=\"about_footer\">\r\n      <div className=\"about_footer__title\">Contacts</div>\r\n      <div className=\"about_footer__icons\">\r\n          <a href=\"https://github.com/YuLogun\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fa fa-github-square\" aria-label=\"github\" />\r\n          </a>\r\n          <a href=\"https://twitter.com/YuLogun\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fa fa-twitter-square\" aria-label=\"twitter\" />\r\n          </a>\r\n          <a href=\"http://linkedin.com/in/iuliia-logunova-982939190\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fa fa-linkedin-square\" aria-label=\"linkedin\" />\r\n          </a> \r\n      </div>\r\n    </div>\r\n  </div>\r\n)","import React from 'react'\r\nimport './assets/Projects.scss'\r\nimport projectAvatar from './assets/projectsAvatar.png'\r\nimport quotePic from './assets/quoteScreen.png'\r\nimport commercePic from './assets/eCommerce.png'\r\n\r\nexport const Projects = () => (\r\n  <div className=\"projects\">\r\n    <h1 className=\"projects_title\">Here are some of my latest projects...</h1>\r\n    <img src={projectAvatar} className=\"projects_avatar\" alt=\"projects avatar\" />\r\n    <div className=\"projects_container\">\r\n      <div className=\"projects_container__item\">\r\n        <div className=\"projects_container__pic__container\">\r\n          <a target=\"_blank\" href=\"https://terry-and-neil-quote-machine.herokuapp.com/\" rel=\"noopener noreferrer\">\r\n            <img src={quotePic} className=\"projects_container__item__avatar\" alt=\"quoye machine project preview\" />\r\n          </a>\r\n        </div>\r\n        <div className=\"projects_container__item__text\">\r\n          This is a quote machine - magic ball project. Ask my 2 favourite authors what they think.\r\n        </div>\r\n      </div>\r\n      <div className=\"projects_container__item\">\r\n        <div className=\"projects_container__pic__container\">\r\n          <a href=\"##\">\r\n            <img src={commercePic} className=\"projects_container__item__avatar\" alt=\"e-commerce project preview\" />\r\n          </a>\r\n        </div>\r\n        <div className=\"projects_container__item__text\">\r\n          This is an e-commerce project. I've always been a big fan of fashion, so making something like this with React was a great deal of fun.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport { Home } from './Home';\nimport { Header } from './Header';\nimport { About } from './About';\nimport { Projects } from './Projects';\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/projects\" component={Projects} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}